version: '3.3'
services:
  nginx_service:
    restart: always
    build:
      context: nginx_service
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    environment:
      - NGINX_PORT=80
    depends_on:
      - django_app
  django_app_db:
    image: postgres:10-alpine
    container_name: django_app_db
    restart: always
    environment:
      - PGUSER=root
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
    healthcheck:
      test: pg_isready -d django
      interval: 30s
      timeout: 30s
      retries: 3
  rabbitmq:
    image: rabbitmq:alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  django_app:
    build: 
      context: django_app
      dockerfile: Dockerfile
    command: uwsgi --ini black_hole.uwsgi.ini --http :8000
    depends_on:
      rabbitmq:
        condition: service_healthy
      django_app_db:
        condition: service_healthy
  parsing_microservice:
    build:
      context: parsing_microservice
      dockerfile: Dockerfile
    command: python main.py
    depends_on:
      rabbitmq:
        condition: service_healthy
